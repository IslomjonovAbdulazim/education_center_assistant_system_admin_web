{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system_admin/src/pages/Managers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { adminAPI } from '../services/api';\nimport Card from '../components/common/Card';\nimport Button from '../components/common/Button';\nimport Modal from '../components/common/Modal';\nimport ManagersList from '../components/managers/ManagersList';\nimport CreateManager from '../components/managers/CreateManager';\nimport EditManager from '../components/managers/EditManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Managers = () => {\n  _s();\n  const [managers, setManagers] = useState([]);\n  const [centers, setCenters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const [managersRes, centersRes] = await Promise.all([adminAPI.getManagers(), adminAPI.getCenters()]);\n      setManagers(managersRes.data);\n      setCenters(centersRes.data);\n    } catch (err) {\n      setError('Failed to fetch data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleCreate = () => {\n    setShowCreateModal(true);\n  };\n  const handleEdit = manager => {\n    setSelectedManager(manager);\n    setShowEditModal(true);\n  };\n  const handleDelete = async managerId => {\n    if (!window.confirm('Are you sure you want to delete this manager?')) {\n      return;\n    }\n    try {\n      await adminAPI.deleteManager(managerId);\n      fetchData(); // Refresh list\n    } catch (err) {\n      setError('Failed to delete manager');\n    }\n  };\n  const handleCreateSuccess = () => {\n    setShowCreateModal(false);\n    fetchData(); // Refresh list\n  };\n  const handleEditSuccess = () => {\n    setShowEditModal(false);\n    setSelectedManager(null);\n    fetchData(); // Refresh list\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading managers...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#333'\n        },\n        children: \"Managers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleCreate,\n        children: \"Add New Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(ManagersList, {\n        managers: managers,\n        centers: centers,\n        onEdit: handleEdit,\n        onDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCreateModal,\n      onClose: () => setShowCreateModal(false),\n      title: \"Create New Manager\",\n      children: /*#__PURE__*/_jsxDEV(CreateManager, {\n        centers: centers,\n        onSuccess: handleCreateSuccess,\n        onCancel: () => setShowCreateModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showEditModal,\n      onClose: () => setShowEditModal(false),\n      title: \"Edit Manager\",\n      children: /*#__PURE__*/_jsxDEV(EditManager, {\n        manager: selectedManager,\n        centers: centers,\n        onSuccess: handleEditSuccess,\n        onCancel: () => setShowEditModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Managers, \"IrZUNnrHqV0H9yjnpZoLUH7KhWs=\");\n_c = Managers;\nexport default Managers;\nvar _c;\n$RefreshReg$(_c, \"Managers\");","map":{"version":3,"names":["React","useState","useEffect","adminAPI","Card","Button","Modal","ManagersList","CreateManager","EditManager","jsxDEV","_jsxDEV","Managers","_s","managers","setManagers","centers","setCenters","loading","setLoading","error","setError","showCreateModal","setShowCreateModal","showEditModal","setShowEditModal","selectedManager","setSelectedManager","fetchData","managersRes","centersRes","Promise","all","getManagers","getCenters","data","err","handleCreate","handleEdit","manager","handleDelete","managerId","window","confirm","deleteManager","handleCreateSuccess","handleEditSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","marginBottom","color","variant","onClick","onEdit","onDelete","isOpen","onClose","title","onSuccess","onCancel","_c","$RefreshReg$"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system_admin/src/pages/Managers.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { adminAPI } from '../services/api';\nimport Card from '../components/common/Card';\nimport Button from '../components/common/Button';\nimport Modal from '../components/common/Modal';\nimport ManagersList from '../components/managers/ManagersList';\nimport CreateManager from '../components/managers/CreateManager';\nimport EditManager from '../components/managers/EditManager';\n\nconst Managers = () => {\n  const [managers, setManagers] = useState([]);\n  const [centers, setCenters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const [managersRes, centersRes] = await Promise.all([\n        adminAPI.getManagers(),\n        adminAPI.getCenters()\n      ]);\n      setManagers(managersRes.data);\n      setCenters(centersRes.data);\n    } catch (err) {\n      setError('Failed to fetch data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleCreate = () => {\n    setShowCreateModal(true);\n  };\n\n  const handleEdit = (manager) => {\n    setSelectedManager(manager);\n    setShowEditModal(true);\n  };\n\n  const handleDelete = async (managerId) => {\n    if (!window.confirm('Are you sure you want to delete this manager?')) {\n      return;\n    }\n\n    try {\n      await adminAPI.deleteManager(managerId);\n      fetchData(); // Refresh list\n    } catch (err) {\n      setError('Failed to delete manager');\n    }\n  };\n\n  const handleCreateSuccess = () => {\n    setShowCreateModal(false);\n    fetchData(); // Refresh list\n  };\n\n  const handleEditSuccess = () => {\n    setShowEditModal(false);\n    setSelectedManager(null);\n    fetchData(); // Refresh list\n  };\n\n  if (loading) return <div className=\"loading\">Loading managers...</div>;\n\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>\n        <h1 style={{ color: '#333' }}>Managers</h1>\n        <Button variant=\"primary\" onClick={handleCreate}>\n          Add New Manager\n        </Button>\n      </div>\n\n      {error && <div className=\"alert alert-error\">{error}</div>}\n\n      <Card>\n        <ManagersList \n          managers={managers}\n          centers={centers}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n        />\n      </Card>\n\n      {/* Create Modal */}\n      <Modal\n        isOpen={showCreateModal}\n        onClose={() => setShowCreateModal(false)}\n        title=\"Create New Manager\"\n      >\n        <CreateManager\n          centers={centers}\n          onSuccess={handleCreateSuccess}\n          onCancel={() => setShowCreateModal(false)}\n        />\n      </Modal>\n\n      {/* Edit Modal */}\n      <Modal\n        isOpen={showEditModal}\n        onClose={() => setShowEditModal(false)}\n        title=\"Edit Manager\"\n      >\n        <EditManager\n          manager={selectedManager}\n          centers={centers}\n          onSuccess={handleEditSuccess}\n          onCancel={() => setShowEditModal(false)}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Managers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}