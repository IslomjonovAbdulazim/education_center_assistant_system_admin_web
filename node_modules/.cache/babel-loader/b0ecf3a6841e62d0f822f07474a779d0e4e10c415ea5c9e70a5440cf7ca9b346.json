{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://islomjonovabdulazim-learning-center-assistant-system-99fa.twc1.net' : 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('admin_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('admin_token');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: data => api.post('/auth/login', data)\n};\n\n// Admin API\nexport const adminAPI = {\n  // Learning Centers\n  getCenters: () => api.get('/admin/learning-centers'),\n  createCenter: data => api.post('/admin/learning-centers', data),\n  updateCenter: (id, data) => api.put(`/admin/learning-centers/${id}`, data),\n  deleteCenter: id => api.delete(`/admin/learning-centers/${id}`),\n  // Managers\n  getManagers: () => api.get('/admin/users?role=manager'),\n  createManager: data => api.post('/admin/users', {\n    ...data,\n    role: 'manager'\n  }),\n  updateManager: (id, data) => api.put(`/admin/users/${id}`, data),\n  deleteManager: id => api.delete(`/admin/users/${id}`),\n  // Stats\n  getStats: () => api.get('/admin/stats')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","data","post","adminAPI","getCenters","get","createCenter","updateCenter","id","put","deleteCenter","delete","getManagers","createManager","role","updateManager","deleteManager","getStats"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system_admin/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://islomjonovabdulazim-learning-center-assistant-system-99fa.twc1.net'\n  : 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('admin_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('admin_token');\n      window.location.href = '/';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (data) => api.post('/auth/login', data),\n};\n\n// Admin API\nexport const adminAPI = {\n  // Learning Centers\n  getCenters: () => api.get('/admin/learning-centers'),\n  createCenter: (data) => api.post('/admin/learning-centers', data),\n  updateCenter: (id, data) => api.put(`/admin/learning-centers/${id}`, data),\n  deleteCenter: (id) => api.delete(`/admin/learning-centers/${id}`),\n  \n  // Managers\n  getManagers: () => api.get('/admin/users?role=manager'),\n  createManager: (data) => api.post('/admin/users', { ...data, role: 'manager' }),\n  updateManager: (id, data) => api.put(`/admin/users/${id}`, data),\n  deleteManager: (id) => api.delete(`/admin/users/${id}`),\n  \n  // Stats\n  getStats: () => api.get('/admin/stats'),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GACtD,4EAA4E,GAC5E,uBAAuB;AAE3B,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,YAAY,CAACO,UAAU,CAAC,aAAa,CAAC;IACtCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAGC,IAAI,IAAKxB,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,IAAI;AAC/C,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG;EACtB;EACAC,UAAU,EAAEA,CAAA,KAAM3B,GAAG,CAAC4B,GAAG,CAAC,yBAAyB,CAAC;EACpDC,YAAY,EAAGL,IAAI,IAAKxB,GAAG,CAACyB,IAAI,CAAC,yBAAyB,EAAED,IAAI,CAAC;EACjEM,YAAY,EAAEA,CAACC,EAAE,EAAEP,IAAI,KAAKxB,GAAG,CAACgC,GAAG,CAAC,2BAA2BD,EAAE,EAAE,EAAEP,IAAI,CAAC;EAC1ES,YAAY,EAAGF,EAAE,IAAK/B,GAAG,CAACkC,MAAM,CAAC,2BAA2BH,EAAE,EAAE,CAAC;EAEjE;EACAI,WAAW,EAAEA,CAAA,KAAMnC,GAAG,CAAC4B,GAAG,CAAC,2BAA2B,CAAC;EACvDQ,aAAa,EAAGZ,IAAI,IAAKxB,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAE;IAAE,GAAGD,IAAI;IAAEa,IAAI,EAAE;EAAU,CAAC,CAAC;EAC/EC,aAAa,EAAEA,CAACP,EAAE,EAAEP,IAAI,KAAKxB,GAAG,CAACgC,GAAG,CAAC,gBAAgBD,EAAE,EAAE,EAAEP,IAAI,CAAC;EAChEe,aAAa,EAAGR,EAAE,IAAK/B,GAAG,CAACkC,MAAM,CAAC,gBAAgBH,EAAE,EAAE,CAAC;EAEvD;EACAS,QAAQ,EAAEA,CAAA,KAAMxC,GAAG,CAAC4B,GAAG,CAAC,cAAc;AACxC,CAAC;AAED,eAAe5B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}